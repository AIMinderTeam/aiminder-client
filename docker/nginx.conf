user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip 압축 설정
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # HTTP → HTTPS 리다이렉트 + ACME 챌린지 노출
    server {
        listen 80;
        server_name dev.aiminder.click;

        # 인증서 발급/갱신용 웹루트
        location ^~ /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # 나머지는 HTTPS로 영구 리다이렉트
        location / { return 301 https://$host$request_uri; }
    }

    # HTTPS 서버 블록
    server {
        listen 443 ssl http2;
        server_name dev.aiminder.click;

        ssl_certificate     /etc/letsencrypt/live/dev.aiminder.click/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/dev.aiminder.click/privkey.pem;
        ssl_session_timeout 1d;
        ssl_session_cache shared:MozSSL:10m;
        ssl_session_tickets off;

        # TLS 설정(모질라 Intermediate 권장 예시)
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305';
        ssl_prefer_server_ciphers off;

        root /usr/share/nginx/html;
        index index.html;

        # 인증서 발급/갱신용 웹루트
        location ^~ /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Swagger UI 정적 파일들을 우선 처리
        location ~ ^/api/swagger-ui/.*\.(css|js|png|jpg|jpeg|gif|ico|svg|html)$ {
            proxy_pass http://aiminder-server:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            expires 1d;
            add_header Cache-Control "public";
        }

        # 일반 API 요청
        location /api {
            proxy_pass http://aiminder-server:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /oauth2 {
            proxy_pass http://aiminder-server:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /login/oauth2 {
            proxy_pass http://aiminder-server:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            try_files $uri $uri/ /index.html;
        }

        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        # HSTS(선택): 첫 배포 시 보수적으로 적용 권장
#         add_header Strict-Transport-Security "max-age=15552000; includeSubDomains" always;
    }
}
